pluginManagement {
  repositories {
    mavenCentral()
    google()
    gradlePluginPortal()
  }
}

develocity {
    buildScan {
        termsOfUseUrl = 'https://gradle.com/terms-of-service'
        termsOfUseAgree = 'yes'
        // TODO: workaround for https://github.com/gradle/gradle/issues/22879
        def isCI = providers.environmentVariable("CI").isPresent()
        publishing.onlyIf { isCI }
    }
}

dependencyResolutionManagement {
  repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)

  repositories {
    mavenCentral()
    google()
    gradlePluginPortal()
  }
}

gradleEnterprise {
  buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
    publishAlways()
  }
}

rootProject.name = 'gradle-license-plugin'

include ':gradle-license-plugin'
