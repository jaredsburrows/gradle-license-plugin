plugins {
  id "com.gradle.build-scan" version "1.12.1"
  id "com.jfrog.artifactory" version "4.4.18"
  id "com.jfrog.bintray" version "1.8.0"
  id "com.github.ben-manes.versions" version "0.17.0"
  id "com.gradle.plugin-publish" version "0.9.10"
  id "java-gradle-plugin"
  id "groovy"
  id "maven-publish"
}

repositories {
  jcenter()
  google()
}

apply from: "gradle/dependencies.gradle"

group = GROUP
version = VERSION_NAME
description = POM_DESCRIPTION

sourceCompatibility = ext.javaVersion
targetCompatibility = ext.javaVersion

jar {
  manifest {
    attributes = ["Implementation-Title"  : POM_NAME,
                  "Implementation-Version": version,
                  "Built-By"              : System.getProperty("user.name"),
                  "Built-Date"            : new Date(),
                  "Built-JDK"             : System.getProperty("java.version"),
                  "Built-Gradle"          : gradle.gradleVersion]
  }
}

task createClasspathManifest() {
  def outputDir = file("$buildDir/$name")

  inputs.files sourceSets.main.runtimeClasspath
  outputs.dir outputDir

  doLast {
    outputDir.mkdirs()
    file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
  }
}

dependencies {
  implementation localGroovy()

  compileOnly deps.gradle

  testRuntime files(createClasspathManifest)

  testImplementation gradleTestKit()
  testImplementation deps.gradle
  testImplementation deps.kotlinGradlePlugin
  testImplementation deps.spockCore, { exclude module: "groovy-all" } // Use localGroovy()
}

// Ordering matters
apply from: "gradle/scan.gradle"
apply from: "gradle/compile.gradle"
apply from: "gradle/plugin.gradle"
apply from: "gradle/publish.gradle"
